// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vod.Repository.Boundary;

namespace vod.Repository.Boundary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("vod.Repository.Boundary.Models.AlreadyWatchedModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ResultId");

                    b.Property<string>("Title");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("AlreadyWatchedMovie");
                });

            modelBuilder.Entity("vod.Repository.Boundary.Models.ResultModel", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Cast");

                    b.Property<string>("FilmDescription");

                    b.Property<string>("FilmwebFilmType");

                    b.Property<decimal>("FilmwebRating");

                    b.Property<int>("FilmwebRatingCount");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("MovieUrl");

                    b.Property<string>("Production");

                    b.Property<string>("ProviderName");

                    b.Property<DateTime>("RefreshDate");

                    b.Property<DateTime>("StoredDate");

                    b.Property<string>("Title");

                    b.Property<int?>("VodFilmType");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("Result");
                });

            modelBuilder.Entity("vod.Repository.Boundary.Models.ResultModel", b =>
                {
                    b.HasOne("vod.Repository.Boundary.Models.AlreadyWatchedModel", "AlreadyWatched")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
